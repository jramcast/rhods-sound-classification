apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy
spec:
  workspaces:
  - name: shared-workspace

  params:
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: "main"
  tasks:
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: https://github.com/jramcast/sound-classification-rhods-demo.git
    - name: subdirectory
      value: ""
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)

  - name: build-webapp
    taskRef:
      name: buildah
      kind: ClusterTask
    params:
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/webapp
    - name: DOCKERFILE
      value: apps/webapp/Containerfile
    - name: CONTEXT
      value: apps/webapp/
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository

  - name: apply-webapp-manifests
    taskRef:
      name: apply-manifests
    workspaces:
    - name: source
      workspace: shared-workspace
    params:
    - name: manifest_dir
      value: apps/webapp/k8s
    runAfter:
    - build-webapp

  - name: update-deployment
    taskRef:
      name: update-deployment
    params:
    - name: deployment
      value: webapp
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/webapp
    runAfter:
    - apply-webapp-manifests

  - name: build-embedded
    taskRef:
      name: buildah
      kind: ClusterTask
    params:
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/embedded
    - name: DOCKERFILE
      value: apps/embedded/Containerfile
    - name: CONTEXT
      value: apps/embedded/
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - fetch-repository
