apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: download-model
spec:
  workspaces:
  - name: repo
  params:
    - name: secret
      description: The secret that contains the S3 API credentials
      type: string
    - name: filename
      description: The file path to download from S3
      type: string
  steps:
    - name: download
      image: registry.access.redhat.com/ubi9/python-39:1-117
      workingDir: /workspace/repo
      command: ["/bin/bash", "-c"]
      args:
        - |-
          cd apps/embedded/
          pip install -r scripts/requirements.txt
          python scripts/download_model.py
          ls -l
      env:
        - name: MODEL_FILENAME
          value: $(params.filename)
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: $(params.secret)
              key: AWS_ACCESS_KEY_ID
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: $(params.secret)
              key: AWS_SECRET_ACCESS_KEY
        - name: AWS_DEFAULT_REGION
          valueFrom:
            secretKeyRef:
              name: $(params.secret)
              key: AWS_DEFAULT_REGION
        - name: AWS_S3_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: $(params.secret)
              key: AWS_S3_ENDPOINT
        - name: AWS_S3_BUCKET
          valueFrom:
            secretKeyRef:
              name: $(params.secret)
              key: AWS_S3_BUCKET

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-embedded-cli-image
spec:
  workspaces:
  - name: shared-workspace
  params:
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: "main"
  - name: s3-secret
    type: string
    description: The secret that contains S3 credentials to download the model
    default: "s3-model-storage"
  - name: s3-filename
    type: string
    description: The path of the file to be downloaded from S3
    default: "sound_classifier.onnx"

  tasks:
  # Fetch the repo
  - name: fetch-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: shared-workspace
    params:
    - name: url
      value: https://github.com/jramcast/rhods-sound-classification.git
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)

  # Download the model file from S3
  - name: download-model
    taskRef:
      name: download-model
    workspaces:
      - name: repo
        workspace: shared-workspace
    params:
      - name: secret
        value: $(params.s3-secret)
      - name: filename
        value: $(params.s3-filename)
    runAfter:
      - fetch-repository

  # Build and push the container image
  - name: build-webapp
    taskRef:
      name: buildah
      kind: ClusterTask
    params:
    - name: IMAGE
      value: image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/sound-classification-cli
    - name: DOCKERFILE
      value: apps/embedded/Containerfile
    - name: CONTEXT
      value: apps/embedded/
    workspaces:
    - name: source
      workspace: shared-workspace
    runAfter:
    - download-model
